# buildout.cfg file for Plone 4 development work
# - for production installations please use http://plone.org/download
# Each part has more information about its recipe on PyPi
# http://pypi.python.org/pypi 
# ... just reach by the recipe name
[buildout]

parts =  
    instance
    zopepy
    i18ndude
    zopeskel
    test
    omelette

#    roadrunner

extends =
    http://dist.plone.org/release/4.2.5/versions.cfg
    versions.cfg

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.2.5
    http://dist.plone.org/thirdparty


extensions = 
    mr.developer
    buildout.dumppickedversions

# zc.buildout 2.x
show-picked-versions = true

unzip = true

versions = versions

# Reference any folders where you have Python egg source code under
# development here e.g.: develop = src/my.package
# If you are using the mr.developer extension and have the source code in a
# repository mr.developer will handle this automatically for you
#develop =
#   src/*
develop = .

sources = sources
auto-checkout = 
    ulif.openoffice
    psj.policy


# Create bin/instance command to manage Zope start up and shutdown
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
debug-mode = on
verbose-security = on
blob-storage = var/blobstorage
eggs =
    Pillow
    Plone
    plone.reload
    Products.PDBDebugMode
    psj.content
    ulif.openoffice

# Some pre-Plone 3.3 packages may need you to register the package name here in 
# order their configure.zcml to be run (http://plone.org/products/plone/roadmap/247)
# - this is never required for packages in the Products namespace (Products.*)
zcml =


# zopepy commands allows you to execute Python scripts using a PYTHONPATH 
# including all the configured eggs
[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

# create bin/i18ndude command
[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

# create bin/test command
[test]
recipe = zc.recipe.testrunner
eggs = psj.content[test]

# create ZopeSkel and paster commands with dexterity support
[zopeskel]
recipe = zc.recipe.egg
eggs =
    ZopeSkel
    PasteScript
    zopeskel.dexterity

# symlinks all Python source code to parts/omelette folder when buildout is run
# windows users will need to install additional software for this part to build 
# correctly.  See http://pypi.python.org/pypi/collective.recipe.omelette for
# relevant details.
[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

# Put your mr.developer managed source code repositories here, see
# http://pypi.python.org/pypi/mr.developer for details on the format of
# this part
[sources]
ulif.openoffice = git https://github.com/ulif/ulif.openoffice.git
psj.policy = git https://github.com/ulif/psj.policy.git
#collective.developermanual = git git://github.com/collective/collective.developermanual.git

# Version pindowns for new style products go here - this section extends one
# provided in http://dist.plone.org/release/
[versions]
ZopeSkel = 2.21.2
zc.buildout = 1.4.4
# older z3cforms raise senseless inline kss validation errors
plone.app.z3cform = 0.7.5
# newer p.a.z3cform requires newer z3c.form
z3c.form = 3.0
# required by z3c.form >= 3.0
six = 1.4.1
# the following packages are req. by psj.policy/ulif.openoffice
Routes = 1.13
beautifulsoup4 = 4.3.2
cssutils = 0.9.10
httplib2 = 0.8
repoze.lru = 0.6
restclient = 0.11.0
