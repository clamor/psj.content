psj.content Metadata
********************

:Test-Layer: unit

Metadata for content types.

PSJ supports metadata for content objects. This support is extremely
flexible, as it allows changing of metadata sets for certain content
types.

In this context Metadata is mostly handled as a set of metadata fields,
which are collected in a metadata set.

Metadata Fields
===============

Metadata fields represent one entry in a metadata set. Typical fields
are such as 'title', 'author' or 'publisher'. They do _not_ contain
any data, i.e. they describe a field, but do not provide its content.

Every metadata field must provide an identifier (the 'title').

We create a simple field like this::

  >>> from psj.content.metadata import BaseField
  >>> field = BaseField('title')

  >>> field.title
  u'title'

Because we want to support different types of fields, which might
require different attributes, we defined a class for every supported
field type, all derived from `BaseField`.

Currently, the following field types are supported:

* TextLineField

* BooleanField

TextLine fields
---------------

A TextLineField holds a line of unicode text. It has a title and a
default value::

  >>> from psj.content.metadata import TextLineField
  >>> field = TextLineField('title')

TextLineFields provide a default value to set, which is `None` by
default::

  >>> field.default is None
  True

We can set a default by passing it to the constructor::

  >>> field = TextLineField('title', default='foo')
  >>> field.title
  u'title'

  >>> field.default
  u'foo'

Of couse we can also pass unicode values for title and default::

  >>> field = TextLineField(u'title', default=u'bar')
  >>> field.title
  u'title'

  >>> field.default
  u'bar'


Boolean fields
--------------

A BooleanField holds a boolean value, of curse. It has a title and a
default value::

  >>> from psj.content.metadata import BooleanField
  >>> field = BooleanField('My Title')

Boolean fields provide a default value to set, which is `False` by
default::

  >>> field.default
  False

We can set a default by passing it to the constructor. The default
value naturally can only be `True` or `False`::

  >>> field = BooleanField('My Title', default=True)
  >>> field.title
  u'My Title'

  >>> field.default
  True

Of couse we can also pass unicode values for the title::

  >>> field = BooleanField(u'title', default=True)
  >>> field.title
  u'title'

  >>> field.default
  True


MetadataSets
============

Creating Metadata Sets
----------------------

Metadatasets contain a name, an id and an ordered list of fields.

We create a simple, empty metadata set like this::

   >>> from psj.content.metadata import MetadataSet
   >>> mset = MetadataSet()

This set is empty::

   >>> list(mset)
   []

This metadata set is unnamed::

   >>> mset.id
   'unnamed'

   >>> mset.name
   u'Unnamed'

We can pass a name using the `name` keyword::

   >>> mset = MetadataSet(name='MyName')
   >>> mset.name
   u'MyName'

   >>> mset = MetadataSet(name=u'MyName')
   >>> mset.name
   u'MyName'

We can also populate a metadata set on creation time with values::

   >>> mset = MetadataSet(name='myset1', fields=(
   ...          dict(title='title', type='TextLine'),
   ...          dict(title='description', type='TextLine')
   ...        ))

   >>> sorted(list(mset))
   ['description', 'title']   
   

Modifying Metadata Sets
------------------------

The basic things we can do with metadata sets are to add and remove
metadata items::

   >>> from psj.content.metadata import TextLineField
   >>> mset = MetadataSet()
   >>> item = TextLineField('address')
   >>> mset.add(item)
   >>> list(mset)
   ['address']

We can also get a certain entry by key::

   >>> mset.get('title')
   <psj.content.metadata.metadata.TextLineField object at 0x...>

We can remove an entry by name (key)::

   >>> item = TextLineField('title')
   >>> mset.add(item)
   >>> list(mset)
   ['address', 'title']

   >>> mset.remove('title')
   >>> list(mset)
   ['address']

